@page "/settings/currencies"

@inject ICurrencyService CurrencyManager
@inject IUriHelper UriHelper
@inject IMapper _mapper;

<BSContainer IsFluid="true">
    <BSRow>
        <BSCol>
            <h2 class="text-black-50">
                Currencies
            </h2>
        </BSCol>
        <BSCol Class="d-flex justify-content-end">
            <a class="btn btn-info btn-circle" href="settings/currencies/new"><span class="oi oi-plus"></span></a>
            @if (currencyDtos.Any(x => x.Selected))
            {
                <a class="btn btn-danger btn-circle ml-2" @onclick="Modal_ShowConfirmModal"><span class="oi oi-trash"></span></a>
            }
        </BSCol>
    </BSRow>
    <BSRow>
        @if (currencyDtos == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <BSTable IsHovarable="true">
                <thead>
                    <tr>
                        <th></th>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Symbol</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var currency in currencyDtos)
                    {
                        <tr class="@(currency.Selected ? "table-active": null)">
                            <td scope="row" class="text-center">
                                <input type="checkbox" class="form-check-input" @bind-value="currency.Selected" />
                            </td>
                            <td>@currency.Id</td>
                            <td>@currency.Name</td>
                            <td>@currency.Symbol</td>
                            <td class="float-right w-100">
                                <a class="btn btn-sm mr-4" href="settings/currencies/edit/@currency.Id"><span class="oi oi-pencil"></span></a>
                                @*<a class="btn btn-sm" @onclick="@(() => ShowDeleteConfirmModal(currency))"><span class="oi oi-trash"></span></a>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </BSTable>
        }
    </BSRow>
</BSContainer>
<ModalDeleteConfirm @ref="modalDeleteConfirm"
                    @ref:suppressField
                    ModalHeader="@ModalHeader"
                    ModalBody="@ModalBody"
                    OnSubmitClick="Modal_DeleteSelectedCurrencies">
</ModalDeleteConfirm>


@code{
    ICollection<Currency> currencies;
    ICollection<CurrencyViewModel> currencyDtos;
    ModalDeleteConfirm modalDeleteConfirm;
    string ModalHeader;
    string ModalBody;
    Currency itemToDelete;

    protected override void OnInitialized()
    {
        this.ListRefresh();
    }
    private void NavigateToNewPage()
    {
        UriHelper.NavigateTo("settings/currencies/new");
    }
    void ListRefresh()
    {
        currencies = CurrencyManager.GetAll();
        currencyDtos = _mapper.Map<ICollection<CurrencyViewModel>>(currencies);
    }

    //Modal Section
    void Modal_ShowConfirmModal()
    {
        ModalHeader = $"Delete currencies";
        ModalBody = $"Are you sure you would like to delete the selected currencies?";
        modalDeleteConfirm.Toggle();
    }

    async Task Modal_DeleteSelectedCurrencies()
    {
        var currencyDtoToDelete = currencyDtos.Where(x => x.Selected).ToList();
        var currenciesToDelete = _mapper.Map<ICollection<Currency>>(currencyDtoToDelete);
        CurrencyManager.DeleteRange(currenciesToDelete);
        await CurrencyManager.SaveChangesAsync();
        this.ListRefresh();
    }
}